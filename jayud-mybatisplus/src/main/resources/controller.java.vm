package ${package.Controller};


import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
    #if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
    #else
import org.springframework.stereotype.Controller;
    #end
    #if(${superControllerClassPackage})
import ${superControllerClassPackage};
    #end

import com.baomidou.mybatisplus.core.metadata.IPage;
import com.jayud.common.constant.SysTips;
import com.jayud.common.BaseResult;
import ${package.Service}.${table.serviceName};
import ${package.Entity}.${entity};

import java.util.Arrays;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.validation.Valid;

/**
 * $!{table.comment} 控制类
 *
 * @author jayud
 * @since ${date}
 */
@Slf4j
@Api(tags = "${table.comment}")
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end



    @Autowired
    public ${table.serviceName} ${table.entityPath}Service;


    /**
     * @description 分页查询
     * @author  jayud
     * @date   ${date}
     * @param: ${table.entityPath}
     * @param: currentPage
     * @param: pageSize
     * @param: req
     * @return: com.jayud.common.BaseResult<com.baomidou.mybatisplus.core.metadata.IPage<${package.Entity}.${entity}>>
     **/
    @ApiOperation("分页查询数据")
    @GetMapping("/selectPage")
    public BaseResult<IPage<${entity}>> selectPage(${entity} ${table.entityPath},
                                                                @RequestParam(name="currentPage", defaultValue="1") Integer currentPage,
                                                                @RequestParam(name="pageSize", defaultValue="10") Integer pageSize,
                                                                HttpServletRequest req) {
        return BaseResult.ok(${table.entityPath}Service.selectPage(${table.entityPath},currentPage,pageSize,req));
    }


    /**
    * @description 列表查询数据
    * @author  jayud
    * @date   ${date}
    * @param: ${table.entityPath}
    * @param: req
    * @return: com.jayud.common.BaseResult<java.util.List<${package.Entity}.${entity}>>
    **/
    @ApiOperation("列表查询数据")
    @GetMapping("/selectList")
    public BaseResult<List<${entity}>> selectList(${entity} ${table.entityPath},
                                                HttpServletRequest req) {
        return BaseResult.ok(${table.entityPath}Service.selectList(${table.entityPath}));
    }


    /**
    * @description 新增
    * @author  jayud
    * @date   ${date}
    * @param: ${table.entityPath}
    * @return: com.jayud.common.BaseResult
    **/
    @ApiOperation("新增")
    @PostMapping("/add")
    public BaseResult add(@Valid @RequestBody ${entity} ${table.entityPath} ){
        ${table.entityPath}Service.save(${table.entityPath});
        return BaseResult.ok(SysTips.ADD_SUCCESS);
    }


    /**
     * @description 编辑
     * @author  jayud
     * @date   ${date}
     * @param: ${table.entityPath}
     * @return: com.jayud.common.BaseResult
     **/
    @ApiOperation("编辑")
    @PostMapping("/edit")
    public BaseResult edit(@Valid @RequestBody ${entity} ${table.entityPath} ){
        ${table.entityPath}Service.updateById(${table.entityPath});
        return BaseResult.ok(SysTips.EDIT_SUCCESS);
    }



    /**
     * @description 物理删除
     * @author  jayud
     * @date   ${date}
     * @param: id
     * @return: com.jayud.common.BaseResult
     **/
    @ApiOperation("物理删除")
    @ApiImplicitParam(name = "id",value = "主键id",dataType = "Long",required = true)
    @GetMapping("/phyDel")
    public BaseResult phyDel(@RequestParam Long id){
        ${table.entityPath}Service.phyDelById(id);
        return BaseResult.ok(SysTips.DEL_SUCCESS);
    }

    /**
     * @description 逻辑删除
     * @author  jayud
     * @date   ${date}
     * @param: id
     * @return: com.jayud.common.BaseResult
     **/
    @ApiOperation("逻辑删除")
    @ApiImplicitParam(name = "id",value = "主键id",dataType = "Long",required = true)
    @GetMapping("/logicDel")
    public BaseResult logicDel(@RequestParam Long id){
        ${table.entityPath}Service.logicDel(id);
        return BaseResult.ok(SysTips.DEL_SUCCESS);
    }


    /**
     * @description 根据id查询
     * @author  jayud
     * @date   ${date}
     * @param: id
     * @return: com.jayud.common.BaseResult<${package.Entity}.${entity}>
     **/
    @ApiOperation("根据id查询")
    @ApiImplicitParam(name = "id",value = "主键id",dataType = "int",required = true)
    @GetMapping(value = "/queryById")
    public BaseResult<${entity}> queryById(@RequestParam(name="id",required=true) int id) {
        ${entity} ${table.entityPath} = ${table.entityPath}Service.getById(id);
        return BaseResult.ok(${table.entityPath});
    }


}
