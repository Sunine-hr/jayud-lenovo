<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jayud.oms.mapper.OrderReceivableCostMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.jayud.oms.model.po.OrderReceivableCost">
        <id column="id" property="id"/>
        <result column="main_order_no" property="mainOrderNo"/>
        <result column="biz_order_no" property="bizOrderNo"/>
        <result column="order_no" property="orderNo"/>
        <result column="customer_code" property="customerCode"/>
        <result column="customer_name" property="customerName"/>
        <result column="cost_type_id" property="costTypeId"/>
        <result column="cost_genre_id" property="costGenreId"/>
        <result column="unit" property="unit"/>
        <result column="cost_code" property="costCode"/>
        <result column="unit_price" property="unitPrice"/>
        <result column="number" property="number"/>
        <result column="currency_code" property="currencyCode"/>
        <result column="amount" property="amount"/>
        <result column="exchange_rate" property="exchangeRate"/>
        <result column="change_amount" property="changeAmount"/>
        <result column="remarks" property="remarks"/>
        <result column="status" property="status"/>
        <result column="opt_name" property="optName"/>
        <result column="opt_time" property="optTime"/>
        <result column="created_time" property="createdTime"/>
        <result column="created_user" property="createdUser"/>
        <result column="legal_name" property="legalName"/>
        <result column="legal_id" property="legalId"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, main_order_no, biz_order_no, order_no, customer_code, customer_name,cost_type_id, cost_code, unit_price, number,
         currency_code, amount, exchange_rate, change_amount, remarks, status, opt_name, opt_time, created_time,
         created_user,cost_genre_id,unit,legal_name,legal_id
    </sql>

    <select id="findReceivableCost" parameterType="com.jayud.oms.model.bo.GetCostDetailForm"
            resultType="com.jayud.oms.model.vo.InputReceivableCostVO">
        SELECT distinct
        orc.`id`,
        orc.main_order_no,
        orc.`customer_code` customerCode,
        ci.`name` customerName ,
        orc.`cost_type_id` costTypeId,
        (SELECT ct.code_name FROM cost_type ct WHERE ct.id = orc.`cost_type_id` LIMIT 1) costType,
        orc.`cost_genre_id` costGenreId,
        (SELECT cg.name FROM cost_genre cg WHERE cg.id = orc.cost_genre_id LIMIT 1) costGenre,
        orc.`unit`,
        orc.`cost_code` costCode,
        (SELECT ci.name FROM cost_info ci WHERE ci.id_code = orc.`cost_code` LIMIT 1) costName,
        orc.`unit_price` unitPrice,
        orc.`number`,
        orc.`currency_code` currencyCode,
        (SELECT ci.currency_name FROM currency_info ci WHERE ci.currency_code = orc.`currency_code` LIMIT 1)
        currencyName,
        orc.`amount`,
        orc.`change_amount` changeAmount,
        orc.`exchange_rate` exchangeRate,
        orc.`remarks`,
        orc.`status`,
        orc.unloading_address unloadingAddress,
        orc.department_id,orc.is_internal
        FROM
        order_receivable_cost orc
        left join customer_info ci on orc.customer_code = ci.id_code
        where orc.`main_order_no` = #{form.mainOrderNo}
        <if test="form.cmd == 'main_cost'">
            and (orc.sub_type = 'main'
            or (orc.is_sum_to_main = 1 and orc.`status` = '3'))
        </if>

        <if test="form.cmd == 'main_cost_audit'">
            and ((orc.`status` in ('2','3') and orc.sub_type = 'main')
            or (orc.`status` in ('3') and orc.sub_type !='main' and orc.is_sum_to_main=true))
        </if>
        <if test="form.cmd == 'main_cost_audited'">
            and ((orc.`status` in ('3') and orc.sub_type = 'main' and orc.is_bill='0')
            or (orc.`status` in ('3') and orc.sub_type !='main' and orc.is_sum_to_main=true and orc.is_bill='0'))
        </if>
        <if test="form.cmd == 'sub_cost'">
            and orc.sub_type = #{form.subType}
            and orc.order_no = #{form.subOrderNo}
        </if>
        <if test="form.cmd == 'sub_cost_audit'">
            and orc.`status` in ('2','3')
            and orc.sub_type = #{form.subType}
            and orc.order_no = #{form.subOrderNo}
        </if>
        <if test="form.cmd == 'sub_cost_audited'">
            and orc.`status` ='3'
            and orc.sub_type = #{form.subType}
            and orc.order_no = #{form.subOrderNo}
            and orc.is_bill='0'
        </if>

        <!--        <if test="form.cmd == 'bg_sub_cost_audit'">-->
        <!--            and orc.`status` in ('2','3')-->
        <!--            and orc.sub_type = 'bg'-->
        <!--            and orc.order_no = #{form.subOrderNo}-->
        <!--        </if>-->
        <!--        <if test="form.cmd == 'ky_sub_cost_audit'">-->
        <!--            and orc.`status` in ('2','3')-->
        <!--            and orc.sub_type = 'ky'-->
        <!--            and orc.order_no = #{form.subOrderNo}-->
        <!--        </if>-->
        order by  orc.cost_code, orc.created_time desc;
    </select>

    <select id="getWriteBackSCostData" parameterType="java.lang.Long"
            resultType="com.jayud.oms.model.vo.InputReceivableCostVO">
    select temp.id,temp.exchangeRate,temp.amount * temp.exchangeRate changeAmount,temp.oCurrencyName from (
        SELECT
            orc.id,
            (SELECT cr.exchange_rate FROM currency_rate cr where cr.`month`= orbd.account_term and  cr.dcid = (select ci.id from currency_info ci where ci.currency_code = 'CNY') and cr.ocid = (select ci.id from currency_info ci where ci.currency_code = orc.currency_code)) exchangeRate,
            orc.amount,
			(select ci.currency_name from currency_info ci where ci.currency_code = orc.currency_code) oCurrencyName
        FROM
            order_receivable_cost orc left join order_receivable_bill_detail orbd on orc.id = orbd.cost_id
        WHERE
            orc.id = #{costId}
	) temp
    </select>
    <select id="getPendingExpenseApproval" resultType="java.util.Map">
        <choose>
            <when test="subType=='main'">
                SELECT
                orc.main_order_no mainOrderNo,
                count( 1 )
                FROM
                `order_receivable_cost` orc left join order_info oi on orc.main_order_no=oi.order_no
                WHERE
                orc.sub_type = "main"
                AND orc.`status` = 2
                AND oi.`status` IN (1,3,4)
                <if test="orderNos!=null and orderNos.size()>0">
                    and orc.main_order_no in
                    <foreach collection="orderNos" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="legalIds != null and legalIds.size>0">
                    and oi.`legal_entity_id` in
                    <foreach collection="legalIds" item="legalId" open="(" separator="," close=")">
                        #{legalId}
                    </foreach>
                </if>
                GROUP BY orc.main_order_no
            </when>
            <otherwise>
                SELECT
                orc.order_no orderNo,
                count( 1 )
                FROM
                `order_receivable_cost` orc left join order_info oi on orc.main_order_no=oi.order_no
                WHERE
                orc.sub_type = #{subType}
                AND orc.`status` = 2
                <if test="orderNos!=null and orderNos.size()>0">
                    and orc.order_no in
                    <foreach collection="orderNos" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <!--                <if test="legalIds != null and legalIds.size>0">-->
                <!--                    and oi.`legal_entity_id` in-->
                <!--                    <foreach collection="legalIds" item="legalId" open="(" separator="," close=")">-->
                <!--                        #{legalId}-->
                <!--                    </foreach>-->
                <!--                </if>-->
                GROUP BY orc.order_no
            </otherwise>
        </choose>
    </select>

    <select id="statisticsOrderAmount" resultType="java.util.Map">
        select
        main_order_no mainOrderNo,order_no orderNo,sum(change_amount) changeAmount
        from order_receivable_cost
        <where>
            <if test="status!=null and status.size>0">
                and status in
                <foreach collection="status" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <choose>
                <when test="subType=='main'">
                    and is_sum_to_main = true
                    <if test="orderNos!=null and orderNos.size>0">
                        and main_order_no in
                        <foreach collection="orderNos" item="orderNo" open="(" separator="," close=")">
                            #{orderNo}
                        </foreach>
                    </if>
                    group by main_order_no
                </when>
                <otherwise>
                    and sub_type=#{subType}
                    <if test="orderNos!=null and orderNos.size>0">
                        and order_no in
                        <foreach collection="orderNos" item="orderNo" open="(" separator="," close=")">
                            #{orderNo}
                        </foreach>
                    </if>
                    group by main_order_no,tmp.order_no
                </otherwise>
            </choose>
        </where>
    </select>


    <select id="statisticsMainOrderCost" resultType="java.util.Map">
        select
        date_format(oi.create_time,#{form.sqlFormat}) createTime,
        sum(ifnull(orc.change_amount,0)) changeAmount
        from order_info oi
        left join order_receivable_cost orc on orc.main_order_no=oi.order_no
        <where>

            and orc.is_sum_to_main = true
            <if test="form.timeInterval != null and form.timeInterval.size>0">
                and date_format(oi.create_time,#{form.sqlFormat}) between #{form.timeInterval[0]} and
                #{form.timeInterval[1]}
            </if>
            <if test="status!=null and status.size>0">
                and orc.status in
                <foreach collection="status" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="legalIds != null and legalIds.size>0">
                and oi.`legal_entity_id` in
                <foreach collection="legalIds" item="legalId" open="(" separator="," close=")">
                    #{legalId}
                </foreach>
            </if>
            group by date_format(oi.create_time,#{form.sqlFormat})
            order by date_format(oi.create_time,#{form.sqlFormat})
        </where>

    </select>


    <select id="getBaseStatisticsAllCost" resultType="com.jayud.oms.model.vo.StatisticsOrderBaseCostVO">
        select
        orc.main_order_no,orc.order_no,orc.change_amount,orc.status,orc.is_internal,orc.is_sum_to_main,
        date_format(oi.create_time,#{form.sqlFormat}) orderCreatedTime
        from order_info oi
        left join order_receivable_cost orc on orc.main_order_no=oi.order_no
        <where>
            <if test="form.timeInterval != null and form.timeInterval.size>0">
                and date_format(oi.create_time,#{form.sqlFormat}) between #{form.timeInterval[0]} and
                #{form.timeInterval[1]}
            </if>
            <if test="status!=null and status.size>0">
                and orc.status in
                <foreach collection="status" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="legalIds != null and legalIds.size>0">
                and oi.`legal_entity_id` in
                <foreach collection="legalIds" item="legalId" open="(" separator="," close=")">
                    #{legalId}
                </foreach>
            </if>
            order by date_format(oi.create_time,#{form.sqlFormat})
        </where>

    </select>
    <select id="statisticalMainOrderBillDetails" resultType="com.jayud.oms.model.vo.StatisticsOrderBillDetailsVO">
        SELECT
        tmp.*,
        sum(IFNULL( cav.local_money, 0 )) heiXiaoLocalAmount,
        sum(IFNULL( cav.short_local_amount, 0 )) shortLocalAmount
        FROM
        (
        SELECT
        date_format(oi.create_time,#{form.sqlFormat}) createTime,
        orc.customer_name,
        orc.customer_code,
        orc.legal_id,
        orc.legal_name,
        sum( obct.local_money ) localMoney,
        obct.bill_no
        FROM
        order_info oi
        INNER JOIN order_receivable_cost orc ON orc.main_order_no = oi.order_no
        INNER JOIN order_bill_cost_total obct ON orc.id = obct.cost_id
        AND obct.money_type = 2
        <where>
            orc.is_bill = 2
            AND orc.is_sum_to_main = TRUE
            <if test="form.timeInterval != null and form.timeInterval.size>0">
                and date_format(oi.create_time,#{form.sqlFormat}) between #{form.timeInterval[0]} and
                #{form.timeInterval[1]}
            </if>
            <if test="status!=null and status.size>0">
                and orc.status in
                <foreach collection="status" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="legalIds != null and legalIds.size>0">
                and oi.`legal_entity_id` in
                <foreach collection="legalIds" item="legalId" open="(" separator="," close=")">
                    #{legalId}
                </foreach>
            </if>
        </where>
        GROUP BY
        obct.bill_no
        ORDER BY
        oi.create_time
        ) tmp
        LEFT JOIN cancel_after_verification cav ON cav.bill_no = tmp.bill_no
        GROUP BY tmp.bill_no

    </select>
</mapper>
